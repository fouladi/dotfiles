[includeIf "gitdir:~/dev/"]
    path = ~/.gitconfig-work
[includeIf "gitdir:~/repo/"]
    path = ~/.gitconfig-personal
[includeIf "gitdir:~/dotfiles/"]
    path = ~/.gitconfig-personal
[includeIf "gitdir:~/dev-personal/ccrypt-wrapper.nvim/"]
    path = ~/.gitconfig-personal
[includeIf "gitdir:~/dev-personal/toggle-overlength.nvim/"]
    path = ~/.gitconfig-personal
[includeIf "gitdir:~/dev-personal/far-cookiecutter/"]
    path = ~/.gitconfig-personal
[includeIf "gitdir:~/dev-personal/sup/"]
    path = ~/.gitconfig-personal
# Add aliases
[alias]
    st = status
    ci = commit
    co = checkout
    br = branch
    # log commands ------- 1.
    lgp = log -p
    lg = log --pretty=oneline --topo-order --graph --abbrev-commit --all --decorate
    lgc = "!git log --format=format: --name-only | egrep -v '^$' | sort | uniq -c | sort -rg | head -10"
    lgg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --decorate --date=short --color --decorate
    lgy = log --since=yesterday.0:00am --oneline --decorate
    # summary of what you're going to push
    lgps = log --pretty=oneline --no-merges origin..master
    lgk = log --graph --all --decorate --stat --date=iso
    lgn = log --graph --all --decorate --stat --date=iso --name-only
    lgd = "!f() { GIT_EXTERNAL_DIFF=difft git log -p --ext-diff $@; }; f"
    lgt = "-c diff.external=difft log -p --ext-diff"
    # diff commands ------- 2.
    df  = diff -b
    # These 4 commands are the same:
    dfc = diff -b --cached
    dfs = diff -b --staged
    dc = diff -b --cached
    ds = diff -b --staged
    #
    dft = difftool
    # List of files I changed since branch created:
    dfm = "!f() { git diff --name-only $(git branch --show-current) $(git merge-base $(git branch --show-current) ${1:-develop}); }; f"
    # like "git log", but include the diffs
    w  = whatchanged -p
    # changes since we last did a push
    wo = whatchanged -p origin..
    io = diff --stat origin/master
    # other commands ------- 3.
    pushall = push --recurse-submodules=on-demand
    id = rev-parse --short HEAD
    unstage = reset HEAD --
    sw = switch
	bb = !better-branch.sh  # TODO: add script to dotfiles repo
[mergetool "nvim"]
    # define command which will be used when "nvim" is set as a merge tool: LOCAL - MERGED - REMOTE
    # :Gw! window where you execute that command will be committed and marked as a merge resolution
    # When in MERGED window use 'd2o' or 'd3o' to pull changes from LOCAL or REMOTE file
    # 'dp' in each window: LOCAL -> MERGED or MERGED <- REMOTE
    cmd = nvim -f -c \"Gvdiffsplit!\" \"$MERGED\"
[merge]
    # set "nvim" as tool for merging
    tool = nvim
    conflictstyle = diff3
[mergetool]
    # automatically launch merge tool without displaying a prompt
    prompt = false
[push]
    default = matching
    autoSetupRemote = true
[core]
    editor = vim
    pager = delta --plus-style=" syntax #012800" --minus-style="syntax #340001" --theme=Monokai Extended
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
[color "status"]
    added = yellow
    changed = green
    untracked = cyan
[interactive]
    diffFilter = delta --color-only
[pull]
    rebase = true
[delta]
    navigate = true    # use n and N to move between diff sections
    light = false      # set to true if you're in a terminal w/ a light background color (e.g. the default macOS terminal)
    syntax-theme = Monokai Extended Bright
[diff]
    colorMoved = default
    tool = difftastic
	algorithm = histogram
[difftool]
    prompt = false
[difftool "difftastic"]
    cmd = difft "$LOCAL" "$REMOTE"
[commit]
    template = ~/.gitmessage
[pager]
    difftool = true
[init]
	defaultBranch = main
[rerere]
	enabled = true
[branch]
	sort = -committerdate
[tig "color"]
    # Colors: white, black, green, magenta, blue, cyan, yellow, red, default=default terminal colors,
	cursor		= black	green bold
	# UI colors
	title-blur	= white	blue
	title-focus	= white	blue  bold
# View-specific color
[tig "color.tree"]
	date		= cyan	default	bold
